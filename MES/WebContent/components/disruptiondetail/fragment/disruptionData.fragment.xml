<core:FragmentDefinition 
	xmlns="sap.m" 
	xmlns:l="sap.ui.layout" 
	xmlns:f="sap.ui.layout.form" 
	xmlns:u="sap.ui.unified" 
	xmlns:core="sap.ui.core">
	<VBox>
		<f:SimpleForm editable="false" layout="ResponsiveGridLayout" title="{i18nModel>OperatorData}" labelSpanL="12" labelSpanM="12" width="100%" adjustLabelSpan="false" columnsL="4" columnsM="2" columnsS="1">
			<f:content>
				<core:Title text="" />
				<Label text="{i18nModel>Category}" />
				<Select id="selectCategory" items="{disruptionCategoryModel>/Rowsets/Rowset/0/Row}" enabled="false" change="onSelectionChange" forceSelection="false" selectedKey="{DisruptionDetailModel>/messageType}">
					<items>
						<core:Item text="{disruptionCategoryModel>DESCRIPTION}" key="{disruptionCategoryModel>MESSAGE_TYPE}" />
					</items>
				</Select>
				<Label text="{i18nModel>Expected}"></Label>
				<DatePicker id="expectedDate" enabled="false" displayFormat="short" value="{path: 'DisruptionDetailModel>/RequiredFixBy', formatter: 'airbus.mes.disruptions.Formatter.getDate'}" change="onExpectedDateChange">
					<layoutData>
						<l:GridData span="L7 M7 S7" />
					</layoutData>
				</DatePicker>
				<TimePicker id="expectedTime" enabled="false"  displayFormat="HH:mm" valueFormat="HH:mm" value="{path: 'DisruptionDetailModel>/RequiredFixBy', formatter: 'airbus.mes.disruptions.Formatter.getTime'}" change="onExpectedDateChange" >
					<layoutData>
						<l:GridData span="L5 M5 S5" />
					</layoutData>
				</TimePicker>
				<Label text="{i18nModel>resGroup}" />
				<Select id="selectResponsibleGrp" items="{disruptionRsnRespGrp>/Rowsets/Rowset/1/Row}" change="onSelectionChange" forceSelection="false" selectedKey="{DisruptionDetailModel>/responsibleGroup}">
					<!-- enabled="{parts: [ {path: 'DisruptionDetailModel>/ResponsibleFlag'}, {path: 'DisruptionDetailModel>/Status'} ], formatter: 'airbus.mes.disruptions.Formatter.setResponsibleGrpEnable'}"> -->
					<items>
						<core:Item text="{disruptionRsnRespGrp>ResponsibleGroupDesc}" key="{disruptionRsnRespGrp>ResponsibleGroup}" />
					</items>
				</Select>
				<core:Title text="" />
				<Label text="{i18nModel>reason}" />
				<Select id="selectAttribute" enabled="false" items="{disruptionRsnRespGrp>/Rowsets/Rowset/0/Row}" forceSelection="false" selectedKey="{DisruptionDetailModel>/reason}" change="airbus.mes.disruptions.ModelManager.setDefaultResolutionGroup">
					<!-- enabled="{parts: [ {path: 'DisruptionDetailModel>/OriginatorFlag'}, {path: 'DisruptionDetailModel>/Status'} ], formatter: 'airbus.mes.disruptions.Formatter.setReasonEnable'}"> -->
					<items>
						<core:Item text="{disruptionRsnRespGrp>TEXT}" key="{disruptionRsnRespGrp>REASON}" />
					</items>
				</Select>
				<Label text="{i18nModel>material}" />
				<MultiInput id="materials" enabled="false" tokens="{MaterialListModel>/}">
					<tokens>
						<Token key="{MaterialListModel>material}" text="{MaterialListModel>material} ({MaterialListModel>quantity})" />
					</tokens>
				</MultiInput>
				<core:Title text="" />
				<Label text="{i18nModel>gravity}" />
				<Select id="gravity" selectedKey="{DisruptionDetailModel>/severity}" enabled="false">
					<!-- enabled="{parts: [ {path: 'DisruptionDetailModel>/OriginatorFlag'}, {path: 'DisruptionDetailModel>/Status'} ], formatter: 'airbus.mes.disruptions.Formatter.setGravityEnable'}"> -->
					<items>
						<core:Item text="{i18nModel>NotBlocked}" key="1" />
						<core:Item text="{i18nModel>Disturbed}" key="2" />
						<core:Item text="{i18nModel>Blocked}" key="3" />
					</items>
				</Select>
				<Label text="{i18nModel>Jigtool}" />
				<MultiInput id="jigtools" enabled="false" tokens="{JigtoolListModel>/}">
					<tokens>
						<Token key="{JigtoolListModel>jigtool}" text="{JigtoolListModel>jigtool} ({JigtoolListModel>quantity})" />
					</tokens>
				</MultiInput>
				<Input id="selectFivemCategory" text="" visible="false"/>
				<core:Title text="" />
				<Label text="{i18nModel>OpenDate}" />
				<DatePicker enabled="false" id="OpenDate" displayFormat="short" value="{path:'DisruptionDetailModel>/openDateTime', formatter:'airbus.mes.disruptions.Formatter.getDate'}">
					<layoutData>
						<l:GridData span="L7 M7 S7" />
					</layoutData>
				</DatePicker>
				<TimePicker enabled="false" id="openTime" displayFormat="HH:mm" valueFormat="HH:mm" value="{path: 'DisruptionDetailModel>/openDateTime', formatter: 'airbus.mes.disruptions.Formatter.getTime'}">
					<layoutData>
						<l:GridData span="L5 M5 S5" />
					</layoutData>
				</TimePicker>
				<Label text="{i18nModel>TimeLost}" />
				<Input placeholder="" id="timeLost" value="{path: 'DisruptionDetailModel>/timeLost', formatter: 'airbus.mes.disruptions.Formatter.setTimeLostValue'}" enabled="false"></Input>
			</f:content>
		</f:SimpleForm>
		<f:SimpleForm id="Execution" editable="true" layout="ResponsiveGridLayout" title="Execution" labelSpanL="12" labelSpanM="12" width="100%" adjustLabelSpan="false" emptySpanL="0" emptySpanM="0" columnsL="4" columnsM="2" columnsS="1">
			<f:content>
				<core:Title text="" />
				<Label text="{i18nModel>status}" />
				<Input id="status" enabled="false" value="{path: 'DisruptionDetailModel>/status', formatter: 'airbus.mes.disruptions.Formatter.setDisruptionStatus'}"></Input>
				<Label text="{i18nModel>promisedDateTime}" id="promisedDateLabel" />
				<DatePicker id="promisedDate" valueFormat="yyyy-MM-dd" displayFormat="short" value="{path: 'DisruptionDetailModel>/promisedDateTime', formatter: 'airbus.mes.disruptions.Formatter.getDate'}" enabled="{parts: [  {path: 'DisruptionDetailModel>/responsibleFlag'}, {path: 'DisruptionDetailModel>/status'} ], formatter: 'airbus.mes.disruptions.Formatter.promisedDateEnable'}">
					<layoutData>
						<l:GridData span="L7 M7 S7" />
					</layoutData>
				</DatePicker>
				<TimePicker id="promisedTime" displayFormat="HH:mm" valueFormat="HH:mm:ss" value="{path: 'DisruptionDetailModel>/promisedDateTime', formatter: 'airbus.mes.disruptions.Formatter.getTime'}" enabled="{parts: [  {path: 'DisruptionDetailModel>/responsibleFlag'}, {path: 'DisruptionDetailModel>/status'} ], formatter: 'airbus.mes.disruptions.Formatter.promisedDateEnable'}">
					<layoutData>
						<l:GridData span="L5 M5 S5" />
					</layoutData>
				</TimePicker>
				<core:Title text="" />
				<Label text="{i18nModel>EscalationLevel}" />
				<Input id="escalationLevel" enabled="false" value="{i18nModel>level} {DisruptionDetailModel>/escalationLevel}"></Input>
				<core:Title text="" />
				<Label text="{i18nModel>dateOfEscalation}" />
				<DatePicker displayFormat="short" value="{path: 'DisruptionDetailModel>/escalationDateTime', formatter: 'airbus.mes.disruptions.Formatter.getDate'}" enabled="false">
					<layoutData>
						<l:GridData span="L7 M7 S7" />
					</layoutData>
				</DatePicker>
				<TimePicker valueFormat="HH:mm" enabled="false" value="{path: 'DisruptionDetailModel>/escalationDateTime', formatter: 'airbus.mes.disruptions.Formatter.getTime'}" displayFormat="HH:mm">
					<layoutData>
						<l:GridData span="L5 M5 S5" />
					</layoutData>
				</TimePicker>
				<core:Title text="" />
				<Label text="{i18nModel>Resolver}" />
				<Select id="selectResolver" items="{ path : 'disruptionResolverModel>/Rowsets/Rowset/0/Row' }" forceSelection="false" selectedKey="{DisruptionDetailModel>/resolverID}">
					<items>
						<core:Item text="{disruptionResolverModel>Name}" key="{disruptionResolverModel>UserID}" />
					</items>
				</Select>
				<!-- <Select id="resolverNewID" items="{ path : 'disruptionResolverModel>/Rowsets/Rowset/0/Row' }" forceSelection="false" selectedKey="{DisruptionDetailModel>/ResolverID}"><items><core:Item text="{disruptionResolverModel>Name}" key="{disruptionResolverModel>UserID}" /></items></Select> -->
			</f:content>
		</f:SimpleForm>
		<f:SimpleForm id="Des_sol" editable="true" visible="true" layout="ResponsiveGridLayout" title="{i18nModel>disruptionHistory}" labelSpanL="12" labelSpanM="12" width="100%" adjustLabelSpan="false" emptySpanL="0" emptySpanM="0" columnsL="1" columnsM="1">
			<f:content>
				<VBox>
					<List showNoData="false" class="sapUiSmallMarginBeginEnd" items="{path: 'DisruptionDetailModel>/disruptionComments'}">
						<CustomListItem class="msgColor">
							<HBox class="sapUiSmallMarginBeginEnd sapUiTinyMarginTopBottom msgHeaderText">
								<items>
									<Text text="{i18nModel>from} : {path: 'DisruptionDetailModel>userFullName', formatter: 'airbus.mes.disruptions.Formatter.textCaseFormat'}"></Text>
									<Text text="|" class="sapUiSmallMarginBeginEnd"></Text>
									<Text text="{i18nModel>action} : {parts: [ {path: 'DisruptionDetailModel>action'}, {path: 'DisruptionDetailModel>comments'}], formatter: 'airbus.mes.disruptions.Formatter.formatCommentAction'}"></Text>
									<Text text="|" class="sapUiSmallMarginBeginEnd"></Text>
									<Text text="{i18nModel>date/time} : {path: 'DisruptionDetailModel>date'}"></Text>
								</items>
							</HBox>
							<Text text="{path: 'DisruptionDetailModel>comments', formatter: 'airbus.mes.disruptions.Formatter.formatComment'}" class="sapUiSmallMarginBeginEnd sapUiSmallMarginBottom"></Text>
						</CustomListItem>
					</List>
				</VBox>
			</f:content>
		</f:SimpleForm>
		<f:SimpleForm id="disruptionComments" editable="false" layout="ResponsiveGridLayout" title="{i18nModel>description_solution}" labelSpanL="12" labelSpanM="12" width="100%" adjustLabelSpan="false" emptySpanL="0" emptySpanM="0" columnsL="1" columnsM="1">
			<f:content>
				<VBox>
					<HBox justifyContent="End" class="attachmentIcon">
						<!--<core:Icon src="sap-icon://attachment" width="1rem" class="sapUiSmallMarginEnd" />
						<core:Icon src="sap-icon://camera" width="1rem" />-->
						<u:FileUploader id="idfileUploader" tooltip="{i18nModel>Attach}" buttonText=" " icon="sap-icon://attachment" sameFilenameAllowed="true" class="attachIcon" change="onPressAttachBttn" buttonOnly="true" style="Transparent"></u:FileUploader>
								<!--<Button type="Transparent" icon="sap-icon://attachment" width="2rem" class="attachIcon"  press ="airbus.mes.disruptions.AttachmentFile.onAttachPress" visible="{Profile>/identifiedUser/permissions/WORK_DIS_ATTACH_DOC}"/>-->
					<Button type="Transparent" press="onCameraPress" icon="sap-icon://camera" width="2rem" class="attachIcon" visible="{Profile>/identifiedUser/permissions/WORK_DIS_PICTURE}"/>
							
					</HBox>
					<TextArea width="100%" height="100%" id="comment" value="{DisruptionDetailModel>/comment}">
						<layoutData>
							<l:GridData span="L12 M12 S12" />
						</layoutData>
					</TextArea>
				</VBox>
			</f:content>
		</f:SimpleForm>
		<List id="idListDocument" class="sapUiSmallMarginBegin" items="{path: 'DesktopFilesModel>/'}" visible="{path:'DesktopFilesModel>/length', formatter: 'airbus.mes.disruptions.Formatter.isEmpty'}">
			<!-- <StandardListItem/> -->
			<headerToolbar class="document-toolbar">
				<Toolbar>
					<Title text="{i18nModel>attachedDocument} ({DesktopFilesModel>/length})" />
				</Toolbar>
			</headerToolbar>
			<CustomListItem id="document-list-item">
				<customData>
					<core:CustomData key="attachedDocumentStatus" value="{path : 'DesktopFilesModel>Status', formatter: 'airbus.mes.disruptions.Formatter.getDocumentStatusToString'}" writeToDom="true" />
				</customData>
				<HBox class="document-item">
					<Label id="document-id" class="document-id" text="{DesktopFilesModel>fileCount}" />
					<Label id="document-title" class="document-title" text="{DesktopFilesModel>Title}" />
					<Label id="document-description" class="document-description" text="{DesktopFilesModel>Description}" />
					<Input width="calc(58% - 20px)" id="document-description-input" class="document-description" visible="false" value="{DesktopFilesModel>Description}" />
					<Label class="document-size" text="{path:'DesktopFilesModel>Size', formatter: 'airbus.mes.disruptions.Formatter.getFileSize'}" />
					<HBox id="document-button" class= "document-button" visible="{path:'DesktopFilesModel>Status', formatter: 'airbus.mes.disruptions.Formatter.getDocumentStatus'}">
						<core:Icon id="document-edit-test" class="document-edit" src="sap-icon://edit" press="onEditPress" />
						<core:Icon class="document-delete" src="sap-icon://delete" press="onDeletePress" />
					</HBox>
					<HBox id="document-button-edit" class= "document-button-edit" visible="false">
						<core:Icon id="document-accept" class="document-accept" src="sap-icon://accept" press="onSaveEditPress" />
						<core:Icon id="document-cancel" class="document-cancel" src="sap-icon://decline" press="onCancelPress" />
					</HBox>
				</HBox>
			</CustomListItem>
		</List>
	</VBox>
</core:FragmentDefinition>